// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ././platypus.proto
package com.platypus.protobuf;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Label.REPEATED;

public final class PlatypusResponse extends Message {

  public static final List<Sensor> DEFAULT_SENSORS = Collections.emptyList();

  @ProtoField(tag = 1)
  public final Pose pose;

  @ProtoField(tag = 2)
  public final Velocity velocity;

  @ProtoField(tag = 3)
  public final Mission mission;

  @ProtoField(tag = 4)
  public final Image image;

  @ProtoField(tag = 5, label = REPEATED)
  public final List<Sensor> sensors;

  private PlatypusResponse(Builder builder) {
    super(builder);
    this.pose = builder.pose;
    this.velocity = builder.velocity;
    this.mission = builder.mission;
    this.image = builder.image;
    this.sensors = immutableCopyOf(builder.sensors);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PlatypusResponse)) return false;
    PlatypusResponse o = (PlatypusResponse) other;
    return equals(pose, o.pose)
        && equals(velocity, o.velocity)
        && equals(mission, o.mission)
        && equals(image, o.image)
        && equals(sensors, o.sensors);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = pose != null ? pose.hashCode() : 0;
      result = result * 37 + (velocity != null ? velocity.hashCode() : 0);
      result = result * 37 + (mission != null ? mission.hashCode() : 0);
      result = result * 37 + (image != null ? image.hashCode() : 0);
      result = result * 37 + (sensors != null ? sensors.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<PlatypusResponse> {

    public Pose pose;
    public Velocity velocity;
    public Mission mission;
    public Image image;
    public List<Sensor> sensors;

    public Builder() {
    }

    public Builder(PlatypusResponse message) {
      super(message);
      if (message == null) return;
      this.pose = message.pose;
      this.velocity = message.velocity;
      this.mission = message.mission;
      this.image = message.image;
      this.sensors = copyOf(message.sensors);
    }

    public Builder pose(Pose pose) {
      this.pose = pose;
      return this;
    }

    public Builder velocity(Velocity velocity) {
      this.velocity = velocity;
      return this;
    }

    public Builder mission(Mission mission) {
      this.mission = mission;
      return this;
    }

    public Builder image(Image image) {
      this.image = image;
      return this;
    }

    public Builder sensors(List<Sensor> sensors) {
      this.sensors = sensors;
      return this;
    }

    @Override
    public PlatypusResponse build() {
      return new PlatypusResponse(this);
    }
  }
}
